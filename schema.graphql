# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type AggregateUser {
    count: Int!
}

type AuthUserOutput {
    token: String!
    user: User!
}

type BatchPayload {
    count: Int!
}

type Mutation {
    authUser(data: AuthUserInput!): AuthUserOutput
    createOneUser(data: UserCreateInput!): User!
    deleteManyUser(where: UserWhereInput): BatchPayload
    deleteOneUser(where: UserWhereUniqueInput!): User
    registerUser(data: RegistrationUserInput!): AuthUserOutput
    updateManyUser(data: UserUpdateManyMutationInput, where: UserWhereInput): BatchPayload
    updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User!
    updateUser(data: UserUpdateInput!): User!
    upsertOneUser(create: UserCreateInput!, update: UserUpdateInput!, where: UserWhereUniqueInput!): User
}

type Query {
    aggregateUser(cursor: UserWhereUniqueInput, distinct: UserDistinctFieldEnum, orderBy: [UserOrderByInput!], skip: Int, take: Int, where: UserWhereInput): AggregateUser
    findFirstUser(cursor: UserWhereUniqueInput, distinct: UserDistinctFieldEnum, orderBy: [UserOrderByInput!], skip: Int, take: Int, where: UserWhereInput): [User!]
    findManyUser(cursor: UserWhereUniqueInput, distinct: UserDistinctFieldEnum, orderBy: [UserOrderByInput!], skip: Int, take: Int, where: UserWhereInput): [User!]
    findManyUserCount(cursor: UserWhereUniqueInput, distinct: UserDistinctFieldEnum, orderBy: [UserOrderByInput!], skip: Int, take: Int, where: UserWhereInput): Int!
    findOneUser(where: UserWhereUniqueInput!): User
    user: User
}

type User {
    group: String
    id: String!
    login: String!
    name: String
}

enum QueryMode {
    default
    insensitive
}

enum SortOrder {
    asc
    desc
}

enum UserDistinctFieldEnum {
    group
    id
    login
    name
    password
}

input AuthUserInput {
    login: String!
    password: String!
}

input NestedStringFilter {
    contains: String
    endsWith: String
    equals: String
    gt: String
    gte: String
    in: [String!]
    lt: String
    lte: String
    not: NestedStringFilter
    notIn: [String!]
    startsWith: String
}

input NestedStringNullableFilter {
    contains: String
    endsWith: String
    equals: String
    gt: String
    gte: String
    in: [String!]
    lt: String
    lte: String
    not: NestedStringNullableFilter
    notIn: [String!]
    startsWith: String
}

input NullableStringFieldUpdateOperationsInput {
    set: String
}

input RegistrationUserInput {
    login: String!
    name: String
    password: String!
}

input StringFieldUpdateOperationsInput {
    set: String
}

input StringFilter {
    contains: String
    endsWith: String
    equals: String
    gt: String
    gte: String
    in: [String!]
    lt: String
    lte: String
    mode: QueryMode
    not: NestedStringFilter
    notIn: [String!]
    startsWith: String
}

input StringNullableFilter {
    contains: String
    endsWith: String
    equals: String
    gt: String
    gte: String
    in: [String!]
    lt: String
    lte: String
    mode: QueryMode
    not: NestedStringNullableFilter
    notIn: [String!]
    startsWith: String
}

input UserCreateInput {
    group: String
    id: String
    login: String!
    name: String
    password: String!
}

input UserOrderByInput {
    group: SortOrder
    id: SortOrder
    login: SortOrder
    name: SortOrder
    password: SortOrder
}

input UserUpdateInput {
    group: NullableStringFieldUpdateOperationsInput
    id: StringFieldUpdateOperationsInput
    login: StringFieldUpdateOperationsInput
    name: NullableStringFieldUpdateOperationsInput
    password: StringFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
    group: NullableStringFieldUpdateOperationsInput
    id: StringFieldUpdateOperationsInput
    login: StringFieldUpdateOperationsInput
    name: NullableStringFieldUpdateOperationsInput
    password: StringFieldUpdateOperationsInput
}

input UserWhereInput {
    AND: [UserWhereInput!]
    NOT: [UserWhereInput!]
    OR: [UserWhereInput!]
    group: StringNullableFilter
    id: StringFilter
    login: StringFilter
    name: StringNullableFilter
    password: StringFilter
}

input UserWhereUniqueInput {
    id: String
    login: String
}


scalar DateTime
